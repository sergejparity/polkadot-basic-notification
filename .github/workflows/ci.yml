name: Polkadot Basic Notifications CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'

env:
  IMAGE_NAME: sergejparity/polkadot-basic-notification

jobs:
  check-linting:
    name: Check linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install npm dependencies
        run: npm ci --ignore-scripts

      - name: Run linting
        run: npm run lint
        # # TODO: currently fails, need fix
        # continue-on-error: true

  build-npm:
    name: Build npm package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Build
        run: npm run build

      - name: Save build artifacts
        run: |
          mkdir -p artifacts
          cp -r build/ artifacts/
          ls -R artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: npm-build-artifacts
          path: artifacts

  docker-build-only:
    name: Test Docker image build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - check-linting
      - build-npm

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download npm build artifacts
        uses: actions/download-artifact@v3
        with:
          name: npm-build-artifacts
          path: artifacts

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          push: false
          context: .
          file: ./injected.Containerfile
          build-args: |
            VCS_REF="${{ github.sha }}"
            BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
            PROJECT_NAME="${{ github.repository }}"
          tags: |
            ${{ env.IMAGE_NAME }}:latest

  docker-build-push-image:
    name: Build and push Docker image
    if: ${{ github.ref == 'refs/heads/master' ||  github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    environment: master_and_tags
    needs:
      - check-linting
      - build-npm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download npm build artifacts
        uses: actions/download-artifact@v3
        with:
          name: npm-build-artifacts
          path: artifacts

      - name: Prepare Docker image tag
        run: |
          echo IMAGE_TAG=$(if [ "$GITHUB_REF" == "refs/heads/master" ]; then echo "master-${GITHUB_SHA::7}"; else echo "$GITHUB_REF_NAME"; fi) >> $GITHUB_ENV
          echo "Docker image will be published with the tag: ${{ env.IMAGE_TAG }}!"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: ${{ github.ref == 'refs/heads/master' ||  github.ref_type == 'tag' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: ./injected.Containerfile
          build-args: |
            VCS_REF="${{ github.sha }}"
            BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
            IMAGE_NAME="${IMAGE_NAME}"
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:latest
